########################################
# Docker build
########################################
#time sudo docker build -t naisy/jetson-jp461-deepstream601-triton-ros2-humble -f Dockerfile.jetson-jp461-deepstream601-triton-ros2-humble .


########################################
# Storage setting
########################################
#sudo service docker stop
#cd /var/lib
#sudo mv docker /mnt/ssd250
#sudo ln -s /mnt/ssd250 docker
#sudo service docker start

# https://github.com/NVIDIA/nvidia-docker/issues/1033
# cmake fails unable to find cuda library while building an image
#vi /etc/docker/daemon.json
#{
#    "runtimes": {
#        "nvidia": {
#            "path": "/usr/bin/nvidia-container-runtime",
#            "runtimeArgs": []
#        }
#    },
#    "default-runtime": "nvidia"
#}
#
#service docker stop
#service docker start


# end of information


########################################
# Base OS repogitory
########################################
# DeepStream-l4t tags: https://catalog.ngc.nvidia.com/orgs/nvidia/containers/deepstream-l4t/tags

ARG BASE_IMAGE=naisy/jetson-jp461-deepstream601-triton-base
FROM ${BASE_IMAGE}

ARG USERNAME=jetson
ARG OPENBLAS_CORETYPE=ARMV8
ARG VENV=python3


########################################
# pyqt5
########################################
USER $USERNAME
RUN . /virtualenv/$VENV/bin/activate \
    && sudo apt-get update \
    && sudo apt-get install -y \
      qt5-default \
    && pip install -U \
      pyqt5-sip \
      pyqt5 \
      sip \
    && sudo apt autoremove -y \
    && sudo rm -rf /var/lib/apt/lists/*



########################################
# ROS2
########################################

########################################
# compile yaml-cpp-0.7, which some ROS packages may use (but is not in the 18.04 apt repo)
########################################
RUN mkdir -p ~/github \
    && cd ~/github \
    && git clone --branch yaml-cpp-0.7.0 https://github.com/jbeder/yaml-cpp yaml-cpp-0.7 \
    && cd yaml-cpp-0.7 \
    && mkdir build \
    && cd build \
    && cmake -DBUILD_SHARED_LIBS=ON .. \
    && make -j$(nproc) \
    && sudo make install \
    && sudo cp libyaml-cpp.so.0.7.0 /usr/lib/aarch64-linux-gnu/ \
    && sudo ln -s /usr/lib/aarch64-linux-gnu/libyaml-cpp.so.0.7.0 /usr/lib/aarch64-linux-gnu/libyaml-cpp.so.0.7


########################################
# behaviortree_cpp_v3
########################################
# BehaviorTreeは.CPPの最新版だけがbehaviortree_cpp_v3のCMakeが通る
# find_package(behaviortree_cpp_v3 REQUIRED)
# なぜか古くなるとbehaviortree_cpp_v3からBehaviorTreeV3に名前が変更され、ビルドも通らなくなる
# 最新 git clone -b 3.7.0 https://github.com/BehaviorTree/BehaviorTree.CPP でOK 2022/05/31 commit id: a5411c978ec976f66d83b1df5aa4dd7c632a142c
RUN sudo apt-get update \
    && sudo apt-get install -y \
      libzmq3-dev \
      libboost-dev \
    && cd ~/github \
    && git clone -b 3.7.0 https://github.com/BehaviorTree/BehaviorTree.CPP \
    && cd BehaviorTree.CPP \
    && git checkout a5411c978ec976f66d83b1df5aa4dd7c632a142c \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make \
    && sudo make install \
    && sudo apt autoremove -y \
    && sudo rm -rf /var/lib/apt/lists/*


####################
# ROS Keys
####################
USER root
RUN curl -s http://repo.ros2.org/repos.key | apt-key add - \
    && curl -s https://packages.osrfoundation.org/gazebo.key | apt-key add -


####################
# add apt list
####################
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2-latest.list > /dev/null


####################
# Packages
####################
RUN apt-get update \
    && apt-get install -y \
      build-essential \
      libbullet-dev \
      python3-flake8 \
      python3-pytest \
      python3-pytest-cov \
      python3-rosdep \
      python3-setuptools \
      python3-catkin-pkg-modules \
      python3-rospkg-modules \
      python3-colcon-common-extensions \
    ### Fast-RTS dependencies ### \
    && apt-get install --no-install-recommends -y \
      libasio-dev \
      libtinyxml2-dev \
    ### Cyclone DDS dependencies ### \
    && apt-get install --no-install-recommends -y \
      libcunit1-dev \
    && apt autoremove -y \
    && rm -rf /var/lib/apt/lists/*


####################
# some pip packages needed for testing
####################
# flake8 4.0.1 requires importlib-metadata<4.3; python_version < "3.8", but you have importlib-metadata 4.8.3 which is incompatible.
# markdown 3.3.7 requires importlib-metadata>=4.4; python_version < "3.10", but you have importlib-metadata 4.2.0 which is incompatible.

USER $USERNAME
RUN . /virtualenv/$VENV/bin/activate \
    && pip install -U \
      argcomplete \
      vcstool \
      flake8-blind-except \
      flake8-builtins \
      flake8-class-newline \
      flake8-comprehensions \
      flake8-deprecated \
      flake8-docstrings \
      flake8-import-order \
      flake8-quotes \
      pytest-repeat \
      pytest-rerunfailures \
      pytest \
      catkin_pkg \
      empy \
      lark \
      markdown==3.3.4


####################
# ros2 humble gazebo, rviz, image_pipeline
####################
ENV ROS_DISTRO=humble
ENV ROS_ROOT=/opt/ros/${ROS_DISTRO}

USER $USERNAME
RUN sudo mkdir -p /opt/ros/$ROS_DISTRO/ \
    && sudo chown $USERNAME:$USERNAME /opt/ros/$ROS_DISTRO/

RUN . /virtualenv/$VENV/bin/activate \
    && mkdir -p /opt/ros/$ROS_DISTRO/src \
    && cd /opt/ros/$ROS_DISTRO \
    ### ros2 humble ### \
    && wget https://raw.githubusercontent.com/ros2/ros2/$ROS_DISTRO/ros2.repos -O ros2.repos \
    && vcs import src < ros2.repos \
    ### gazebo ### \
    && sudo sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list' \
    && curl -s https://packages.osrfoundation.org/gazebo.key | sudo apt-key add - \
    && sudo apt-get update \
    && sudo apt-get install -y gazebo11-common gazebo11 libgazebo11-dev \
    #&& wget https://raw.githubusercontent.com/ros-simulation/gazebo_ros_pkgs/$ROS_DISTRO/gazebo_ros_pkgs.repos -O gazebo_ros_pkgs.repos \
    && git clone -b galactic https://github.com/ros-simulation/gazebo_ros_pkgs \
    && git clone -b ros2 https://github.com/ros-perception/vision_opencv \
    ### /opt/ros/humble/src ### \
    && cd /opt/ros/$ROS_DISTRO/src/ \
    ### teleop_twist_joy ### \
    && git clone -b $ROS_DISTRO https://github.com/ros2/teleop_twist_joy \
    ### teleop_tools \
    && git clone -b foxy-devel https://github.com/ros-teleop/teleop_tools \
    ### ackermann_msgs ### \
    && git clone -b ros2 https://github.com/ros-drivers/ackermann_msgs \
    ### image_pipeline ### \
    && git clone -b ros2 https://github.com/ros-perception/image_pipeline \
    ### vision_msgs ### \
    && git clone -b galactic https://github.com/ros-perception/vision_msgs \
    ### Xacro ### \
    && git clone -b dashing-devel https://github.com/ros/xacro/ \
    ### VLP-16 ### \
    && sudo apt-get install -y libpcap-dev libpcl-dev libyaml-cpp-dev \
    && git clone -b galactic https://github.com/ros/diagnostics \
    && git clone -b ros2 https://github.com/ros/angles \
    && git clone -b ros2 https://github.com/ros-drivers/velodyne \
    ### ros-planning navigation2 ### \
    && git clone -b ros2 https://github.com/ros/bond_core \
    && git clone -b ${ROS_DISTRO} https://github.com/ros-planning/navigation2 \
    ### turtlebot3 ### \
    && git clone -b ${ROS_DISTRO}-devel https://github.com/ROBOTIS-GIT/DynamixelSDK \
    && git clone -b ${ROS_DISTRO}-devel https://github.com/ROBOTIS-GIT/turtlebot3_msgs \
    && git clone -b ${ROS_DISTRO}-devel https://github.com/ROBOTIS-GIT/turtlebot3 \
    && git clone -b ${ROS_DISTRO}-devel https://github.com/ROBOTIS-GIT/hls_lfcd_lds_driver \
    ### pcl_conversions ### \
    && git clone -b ros2 https://github.com/ros-perception/pcl_msgs \
    && git clone -b galactic https://github.com/ros-perception/perception_pcl \
    ### ros_canopen ### \
    && cd /opt/ros/$ROS_DISTRO/src \
    && git clone -b dashing https://github.com/ros-industrial/ros_canopen \
    && sudo apt autoremove -y \
    && sudo rm -rf /var/lib/apt/lists/*


########################################
# ompl
########################################
# requirement: boost
#--- stderr: smac_planner
#
#CMake Error at CMakeLists.txt:25 (find_package):
#  By not providing "Findompl.cmake" in CMAKE_MODULE_PATH this project has
#  asked CMake to find a package configuration file provided by "ompl", but
#  CMake did not find one.
#
#  Could not find a package configuration file provided by "ompl" with any of
#  the following names:
#
#    omplConfig.cmake
#    ompl-config.cmake
#
#  Add the installation prefix of "ompl" to CMAKE_PREFIX_PATH or set
#  "ompl_DIR" to a directory containing one of the above files.  If "ompl"
#  provides a separate development package or SDK, be sure it has been
#  installed.
RUN cd ~/github \
    && git clone https://github.com/ompl/ompl \
    && cd ompl \
    && mkdir -p build/Release \
    && cd build/Release \
    && cmake ../.. \
    && make -j$(nproc) \
    && sudo make install


########################################
# PCL 1.12.1 インストール
########################################
# requirement: boost
# cartographer_ros foxy cannot use pcl 1.12.1
RUN sudo apt-get update \
    && sudo apt-get install -y \
      libflann-dev \
      freeglut3-dev \
    && sudo apt autoremove -y \
    && sudo rm -rf /var/lib/apt/lists/*

RUN cd ~/github \
    && git clone https://github.com/PointCloudLibrary/pcl \
    && cd pcl \
    && git checkout pcl-1.12.1 \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make -j$(nproc) \
    && sudo make install


########################################
# rosdep dependency install
########################################
RUN sudo apt-get update \
    ### source update ### \
    && sudo rosdep init \
    && rosdep update \
    && cd /opt/ros/$ROS_DISTRO/ \
    && rosdep install --from-paths src --ignore-src -r -y --rosdistro $ROS_DISTRO \
    && sudo apt autoremove -y \
    && sudo rm -rf /var/lib/apt/lists/*

####################
# gazebo_ros src fix
####################
#RUN cd /opt/ros/foxy/src/image_common/ \
#    && git checkout foxy \
#    && sed -i 's/set(CMAKE_CXX_FLAGS "\${CMAKE_CXX_FLAGS} \${GAZEBO_CXX_FLAGS}")/set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")/g' /opt/ros/foxy/src/gazebo_ros_pkgs/gazebo_dev/cmake/gazebo_dev-extras.cmake


####################
# python_orocos_kdl_vendor src fix
####################
RUN cd /opt/ros/$ROS_DISTRO/src/ros2/orocos_kdl_vendor \
    && git rev-parse --abbrev-ref HEAD \
    && git fetch origin pull/9/head:issues_9 \
    && git checkout issues_9 \
    && git rev-parse --abbrev-ref HEAD


####################
# apt package nlohmann-json-dev bug fix
####################
# /opt/ros/humble/src/navigation2/nav2_smac_planner/include/nav2_smac_planner/utils.hpp: In function ‘void nav2_smac_planner::fromJsonToMetaData(const json&, nav2_smac_planner::LatticeMetadata&)’:
# /opt/ros/humble/src/navigation2/nav2_smac_planner/include/nav2_smac_planner/utils.hpp:113:29: error: ‘const value_type’ {aka ‘const class nlohmann::basic_json<>’} has no member named ‘get_to’; did you mean ‘get_ptr’?
#    json.at("turning_radius").get_to(lattice_metadata.min_turning_radius);
#
# https://github.com/nlohmann/json/issues/1648#issuecomment-504539463
# apt list --installed | grep json
# nlohmann-json-dev/now 2.1.1-1.1 all [installed,local]
# This is nlohmann-jeson-dev bug. Ubuntu 18.04 nlohmann-jeson-dev version 2.1.1 released in 2018.
# bugfix is 2019.
RUN cd ~/github \
    && git clone -b v3.10.5 https://github.com/nlohmann/json \
    && cd json \
    && mkdir build \
    && cd build \
    && cmake .. \
    && cmake --build . \
    && sudo make install


####################
# diagnostics/self_test build skip
####################
# https://github.com/ros/diagnostics/issues/206
# https://github.com/ros/rosdistro/pull/30890
# diagnosticsによって追加されるself_testは現在ビルドができないため、ビルドから外します。将来再び追加されることがあります。
RUN touch /opt/ros/$ROS_DISTRO/src/diagnostics/self_test/COLCON_IGNORE

####################
# ros build
####################
RUN . /virtualenv/$VENV/bin/activate \
    && cd /opt/ros/$ROS_DISTRO \
    ### build ### \
    && export pybind11_DIR=/virtualenv/$VENV/lib/python3.6/site-packages/pybind11/share/cmake/pybind11 \
    && export PYTHONPATH=/usr/lib/python3/dist-packages \
    && colcon build --symlink-install --cmake-force-configure --cmake-clean-cache


########################################
# Cartographer-ROS
########################################
USER $USERNAME
RUN sudo apt-get update \
    && sudo apt-get install -y \
      libgoogle-glog-dev \
      libgflags-dev \
      libatlas-base-dev \
      libeigen3-dev \
      libsuitesparse-dev \
      liblua5.2-dev \
      stow \
    && sudo apt autoremove -y \
    && sudo rm -rf /var/lib/apt/lists/*

# humbleはcartographer_ros 2.0.900xを使うことからCeres 2.0.0を使う
RUN cd ~/github \
    && git clone -b 2.0.0 https://ceres-solver.googlesource.com/ceres-solver \
    && cd ceres-solver \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make -j$(nproc) \
    && sudo make install

# cartographer 2.0.0を使う
RUN cd ~/github \
    && git clone -b 2.0.0 https://github.com/cartographer-project/cartographer \
    # https://github.com/cartographer-project/cartographer/issues/1611#issuecomment-560236725
    && sed -i 's/if(NOT GMock_FOUND)/if(NOT GMock_FOUND)\n  find_library(GTEST_LIBRARIES NAMES gtest PATH_SUFFIXES lib)\n  find_library(GMOCK_A_LIBRARIES NAMES gmock PATH_SUFFIXES lib)/g' cartographer/cmake/modules/FindGMock.cmake \
    && sed -i 's/list(APPEND GMOCK_LIBRARIES \${CMAKE_THREAD_LIBS_INIT})/list(APPEND GMOCK_LIBRARIES ${GMOCK_A_LIBRARIES} ${GTEST_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})/g' cartographer/cmake/modules/FindGMock.cmake \
    # https://github.com/cartographer-project/cartographer/issues/1611#issuecomment-801093258
    && sed -i 's/\${GMOCK_LIBRARY}/${GMOCK_LIBRARIES}/g' cartographer/CMakeLists.txt \
    && chmod +x cartographer/scripts/install_abseil.sh \
    && cd cartographer/scripts \
    && ./install_abseil.sh \
    && cd .. \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make -j$(nproc) \
    && sudo make install

# cartographer_rvizはCOLCON_IGNORE（空ファイル）が置いてあるためビルドから除外される
RUN . /virtualenv/$VENV/bin/activate \
    && . ${ROS_ROOT}/install/setup.sh \
    && cd /opt/ros/$ROS_DISTRO/src \
    && git clone -b 2.0.9000 https://github.com/ros2/cartographer_ros \
    && cd /opt/ros/$ROS_DISTRO \
    && sed -i 's/set(CMAKE_CXX_STANDARD 14)/set(CMAKE_CXX_STANDARD 17)/g' src/cartographer_ros/cartographer_ros/CMakeLists.txt \
    && CPATH=/opt/ros/$ROS_DISTRO/install/rmw/include \
      colcon build --symlink-install --cmake-force-configure --cmake-clean-cache --packages-skip-build-finished --base-paths \
      src/cartographer_ros


########################################
# rviz_visual_tools, moveit2
########################################
# eigen_stl_containersを先にビルドする必要がある
# git config --get remote.origin.url; git branch -a

RUN . /virtualenv/$VENV/bin/activate \
    && . ${ROS_ROOT}/install/setup.sh \
    && cd /opt/ros/$ROS_DISTRO/src \
    && git clone -b ros2 https://github.com/ros/eigen_stl_containers \
    && git clone -b ros2 https://github.com/naisy/rviz_visual_tools \
    && cd /opt/ros/$ROS_DISTRO \
    && colcon build --symlink-install --cmake-force-configure --cmake-clean-cache --packages-skip-build-finished --base-paths \
      src/eigen_stl_containers \
      src/rviz_visual_tools


RUN . /virtualenv/$VENV/bin/activate \
    && . ${ROS_ROOT}/install/setup.sh \
    && cd /opt/ros/$ROS_DISTRO/src \
    && git clone -b ros2 https://github.com/ros-planning/random_numbers \
    && git clone -b ros2 https://github.com/ros-planning/geometric_shapes \
    && cd /opt/ros/$ROS_DISTRO \
    && colcon build --symlink-install --cmake-force-configure --cmake-clean-cache --packages-skip-build-finished --base-paths \
      src/random_numbers \
      src/geometric_shapes


# git log -1 | grep ^commit 
RUN . /virtualenv/$VENV/bin/activate \
    && . ${ROS_ROOT}/install/setup.sh \
    && cd /opt/ros/$ROS_DISTRO/src \
    && git clone -b ros2 https://github.com/wg-perception/object_recognition_msgs \
    && git clone -b ros2 https://github.com/OctoMap/octomap_msgs \
    && git clone -b master https://github.com/pantor/ruckig \
    && git clone -b ros2 https://github.com/ros-planning/srdfdom \
    && git clone -b ros2 https://github.com/ros-planning/moveit_msgs \
    && git clone -b humble https://github.com/ros-controls/control_msgs \
    && git clone -b ros2 https://github.com/ros-planning/moveit_resources \
    && git clone -b ros2 https://github.com/ros-planning/warehouse_ros \
    && git clone -b master https://github.com/ros-controls/ros2_control \
    && git clone -b master https://github.com/ros-controls/ros2_controllers \
    && git clone -b master https://github.com/ros-controls/ros2_control_demos \
    && git clone -b master https://github.com/ros-controls/realtime_tools \
    && git clone -b ros2-master https://github.com/ros-controls/control_toolbox \
    && git clone -b humble https://github.com/ros-planning/moveit2 \
    ### commit id
    && cd /opt/ros/$ROS_DISTRO/src/object_recognition_msgs \
    && git checkout 811fb385ec4c1919dce2b30334fe9f49639073fd \
    && cd /opt/ros/$ROS_DISTRO/src/octomap_msgs \
    && git checkout 65d0b3b81f890b5dc3bf531abe0e8c12ef3858e2 \
    && cd /opt/ros/$ROS_DISTRO/src/ruckig \
    && git checkout 170536213a3b643d8845873256b65c53ee6f47c2 \
    && cd /opt/ros/$ROS_DISTRO/src/srdfdom \
    && git checkout 91d7db8b28d64008145a7281febd08c2f59a0fe8 \
    && cd /opt/ros/$ROS_DISTRO/src/moveit_msgs \
    && git checkout 922fa3253a5b96423b5014492bad8ee0ca96f639 \
    && cd /opt/ros/$ROS_DISTRO/src/control_msgs \
    && git checkout 81d31dee97fed2b0029b502fa2d85314e6ca8371 \
    && cd /opt/ros/$ROS_DISTRO/src/moveit_resources \
    && git checkout c8ac191f80d5afccf6ac6d7ac13d450a6d05ad5e \
    && cd /opt/ros/$ROS_DISTRO/src/warehouse_ros \
    && git checkout 653e4b2afb550dc9805ed3c84971ac79e0796b4e \
    && cd /opt/ros/$ROS_DISTRO/src/ros2_control \
    && git checkout 8023fe4e8f81f0ec4a56ae0b14a45fe5de4f3129 \
    && cd /opt/ros/$ROS_DISTRO/src/ros2_controllers \
    && git checkout c74e31a29255fa2f66f45874195d50a0f5cba471 \
    && cd /opt/ros/$ROS_DISTRO/src/ros2_control_demos \
    && git checkout f42b06f92f8c28bcfa2465fa4f9eb61cbfa9c639 \
    && cd /opt/ros/$ROS_DISTRO/src/realtime_tools \
    && git checkout e0b79baa7f81851119f3a6347da82410fa94dce1 \
    && cd /opt/ros/$ROS_DISTRO/src/control_toolbox \
    && git checkout 29190b4acab8c62c9e1787310674aa739f6ff93c \
    && cd /opt/ros/$ROS_DISTRO/src/moveit2 \
    && git checkout 7dd0434f742d6586f32843802135ebcc2720c79c \
    && cd /opt/ros/$ROS_DISTRO \
    && sed -i 's|target_include_directories(\${MOVEIT_LIB_NAME} PUBLIC \$<BUILD_INTERFACE:\${CMAKE_CURRENT_BINARY_DIR}>)|target_include_directories(${MOVEIT_LIB_NAME} PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}> /opt/ros/humble/install/octomap_msgs/include)|g' src/moveit2/moveit_core/collision_detection_bullet/CMakeLists.txt \
    && sed -i 's|target_include_directories(\${MOVEIT_LIB_NAME} PUBLIC \$<BUILD_INTERFACE:\${CMAKE_CURRENT_BINARY_DIR}>)|target_include_directories(${MOVEIT_LIB_NAME} PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}> /opt/ros/humble/install/octomap_msgs/include)|g' src/moveit2/moveit_core/planning_scene/CMakeLists.txt \
    && sed -i 's|^target_link_libraries(\${MOVEIT_LIB_NAME}$|target_link_libraries(${MOVEIT_LIB_NAME}\n  stdc++fs|g' src/moveit2/moveit_core/robot_model/CMakeLists.txt \
    && export CMAKE_BUILD_TYPE=Release \
    && export CMAKE_CXX_STANDARD=17 \
    && colcon build --symlink-install --cmake-force-configure --cmake-clean-cache --packages-skip-build-finished --base-paths \
      src


# colcon build --symlink-install --cmake-force-configure --cmake-clean-cache --packages-skip-build-finished --continue-on-error --base-paths src
####################
# setup.bash
####################
USER root
RUN echo "export ROS_ROOT=$ROS_ROOT" >> /root/.bashrc \
    && echo 'source ${ROS_ROOT}/install/setup.bash' >> /root/.bashrc \
    && echo "export PYTHONPATH=/virtualenv/$VENV/lib/python3.6/site-packages" >> /home/$USERNAME/.bashrc \
    && echo "export ROS_ROOT=$ROS_ROOT" >> /home/$USERNAME/.bashrc \
    && echo 'source ${ROS_ROOT}/install/setup.bash' >> /home/$USERNAME/.bashrc

RUN sed -i 's/docker-/docker-ros2-humble-/g' /root/.bashrc \
    && sed -i 's/docker-/docker-ros2-humble-/g' /home/$USERNAME/.bashrc
USER $USERNAME
