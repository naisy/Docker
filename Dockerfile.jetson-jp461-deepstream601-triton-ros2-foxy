########################################
# Docker build
########################################
#time sudo docker build -t naisy/jetson-jp461-deepstream601-triton-ros2-foxy -f Dockerfile.jetson-jp461-deepstream601-triton-ros2-foxy .


########################################
# Storage setting
########################################
#sudo service docker stop
#cd /var/lib
#sudo mv docker /mnt/ssd250
#sudo ln -s /mnt/ssd250 docker
#sudo service docker start

# https://github.com/NVIDIA/nvidia-docker/issues/1033
# cmake fails unable to find cuda library while building an image
#vi /etc/docker/daemon.json
#{
#    "runtimes": {
#        "nvidia": {
#            "path": "/usr/bin/nvidia-container-runtime",
#            "runtimeArgs": []
#        }
#    },
#    "default-runtime": "nvidia"
#}
#
#service docker stop
#service docker start


# end of information


########################################
# Base OS repogitory
########################################
# DeepStream-l4t tags: https://catalog.ngc.nvidia.com/orgs/nvidia/containers/deepstream-l4t/tags

ARG BASE_IMAGE=naisy/jetson-jp461-deepstream601-triton-base
FROM ${BASE_IMAGE}

ARG USERNAME=jetson
ARG OPENBLAS_CORETYPE=ARMV8
ARG VENV=python3


########################################
# pyqt5
########################################
USER $USERNAME
RUN . /virtualenv/$VENV/bin/activate \
    && sudo apt-get update \
    && sudo apt-get install -y \
      qt5-default \
    && pip install -U \
      pyqt5-sip \
      pyqt5 \
      sip \
    && sudo apt autoremove -y \
    && sudo rm -rf /var/lib/apt/lists/*


########################################
# ROS2
########################################


########################################
# compile yaml-cpp-0.7, which some ROS packages may use (but is not in the 18.04 apt repo)
########################################
USER root
RUN mkdir -p /github \
    && cd /github \
    && git clone --branch yaml-cpp-0.7.0 https://github.com/jbeder/yaml-cpp yaml-cpp-0.7 \
    && cd yaml-cpp-0.7 \
    && mkdir build \
    && cd build \
    && cmake -DBUILD_SHARED_LIBS=ON .. \
    && make -j$(nproc) \
    && make install \
    && cp libyaml-cpp.so.0.7.0 /usr/lib/aarch64-linux-gnu/ \
    && ln -s /usr/lib/aarch64-linux-gnu/libyaml-cpp.so.0.7.0 /usr/lib/aarch64-linux-gnu/libyaml-cpp.so.0.7


########################################
# behaviortree_cpp_v3
########################################
# BehaviorTreeは.CPPの最新版だけがbehaviortree_cpp_v3のCMakeが通る
# find_package(behaviortree_cpp_v3 REQUIRED)
# なぜか古くなるとbehaviortree_cpp_v3からBehaviorTreeV3に名前が変更され、ビルドも通らなくなる
# 最新 git clone -b 3.7.0 https://github.com/BehaviorTree/BehaviorTree.CPP でOK 2022/05/31 commit id: a5411c978ec976f66d83b1df5aa4dd7c632a142c
USER root
RUN apt-get update \
    && apt-get install -y \
      libzmq3-dev \
      libboost-dev \
    && mkdir -p /github \
    && cd /github \
    && git clone -b 3.7.0 https://github.com/BehaviorTree/BehaviorTree.CPP \
    && cd BehaviorTree.CPP \
    && git checkout a5411c978ec976f66d83b1df5aa4dd7c632a142c \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make \
    && make install \
    && apt autoremove -y \
    && rm -rf /var/lib/apt/lists/*


####################
# ROS Keys
####################
USER root
RUN curl -s http://repo.ros2.org/repos.key | apt-key add - \
    && curl -s https://packages.osrfoundation.org/gazebo.key | apt-key add -


####################
# add apt list
####################
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2-latest.list > /dev/null


####################
# Packages
####################
RUN apt-get update \
    && apt-get install -y \
      build-essential \
      libbullet-dev \
      python3-flake8 \
      python3-pytest \
      python3-pytest-cov \
      python3-rosdep \
      python3-setuptools \
      python3-catkin-pkg-modules \
      python3-rospkg-modules \
      python3-colcon-common-extensions \
    ### Fast-RTS dependencies ### \
    && apt-get install --no-install-recommends -y \
      libasio-dev \
      libtinyxml2-dev \
    ### Cyclone DDS dependencies ### \
    && apt-get install --no-install-recommends -y \
      libcunit1-dev \
    && apt autoremove -y \
    && rm -rf /var/lib/apt/lists/*


####################
# some pip packages needed for testing
####################
# flake8 4.0.1 requires importlib-metadata<4.3; python_version < "3.8", but you have importlib-metadata 4.8.3 which is incompatible.
# markdown 3.3.7 requires importlib-metadata>=4.4; python_version < "3.10", but you have importlib-metadata 4.2.0 which is incompatible.

USER $USERNAME
RUN . /virtualenv/$VENV/bin/activate \
    && pip install -U \
      argcomplete \
      vcstool \
      flake8-blind-except \
      flake8-builtins \
      flake8-class-newline \
      flake8-comprehensions \
      flake8-deprecated \
      flake8-docstrings \
      flake8-import-order \
      flake8-quotes \
      pytest-repeat \
      pytest-rerunfailures \
      pytest \
      catkin_pkg \
      empy \
      lark \
      markdown==3.3.4


####################
# ros2 foxy gazebo, rviz, image_pipeline
####################
ENV ROS_DISTRO=foxy
ENV ROS_ROOT=/opt/ros/${ROS_DISTRO}

USER $USERNAME
RUN sudo mkdir -p /opt/ros/$ROS_DISTRO/ \
    && sudo chown $USERNAME:$USERNAME /opt/ros/$ROS_DISTRO/

RUN . /virtualenv/$VENV/bin/activate \
    && mkdir -p /opt/ros/$ROS_DISTRO/src \
    && cd /opt/ros/$ROS_DISTRO \
    ### ros2 foxy ### \
    && wget https://raw.githubusercontent.com/ros2/ros2/$ROS_DISTRO/ros2.repos -O ros2.repos \
    && vcs import src < ros2.repos \
    ### gazebo ### \
    && sudo sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list' \
    && curl -s https://packages.osrfoundation.org/gazebo.key | sudo apt-key add - \
    && sudo apt-get update \
    && sudo apt-get install -y gazebo11-common gazebo11 libgazebo11-dev \
    #&& wget https://raw.githubusercontent.com/ros-simulation/gazebo_ros_pkgs/$ROS_DISTRO/gazebo_ros_pkgs.repos -O gazebo_ros_pkgs.repos \
    && echo "repositories:" > gazebo_ros_pkgs.repos \
    && echo "  gazebo_ros_pkgs:" >> gazebo_ros_pkgs.repos \
    && echo "    type: git" >> gazebo_ros_pkgs.repos \
    && echo "    url: https://github.com/ros-simulation/gazebo_ros_pkgs.git" >> gazebo_ros_pkgs.repos \
    && echo "    version: foxy" >> gazebo_ros_pkgs.repos \
    && echo "  image_common:" >> gazebo_ros_pkgs.repos \
    && echo "    type: git" >> gazebo_ros_pkgs.repos \
    && echo "    url: https://github.com/ros-perception/image_common.git" >> gazebo_ros_pkgs.repos \
    && echo "    version: foxy" >> gazebo_ros_pkgs.repos \
    && echo "  vision_opencv:" >> gazebo_ros_pkgs.repos \
    && echo "    type: git" >> gazebo_ros_pkgs.repos \
    && echo "    url: https://github.com/ros-perception/vision_opencv.git" >> gazebo_ros_pkgs.repos \
    && echo "    version: ros2" >> gazebo_ros_pkgs.repos \
    && vcs import src < gazebo_ros_pkgs.repos \
    ### /opt/ros/foxy/src ### \
    && cd /opt/ros/$ROS_DISTRO/src/ \
    ### teleop_twist_joy ### \
    && git clone -b $ROS_DISTRO https://github.com/ros2/teleop_twist_joy \
    ### teleop_tools \
    && git clone -b ${ROS_DISTRO}-devel https://github.com/ros-teleop/teleop_tools \
    ### ackermann_msgs ### \
    && git clone -b ros2 https://github.com/ros-drivers/ackermann_msgs \
    ### image_pipeline ### \
    && git clone -b ros2 https://github.com/ros-perception/image_pipeline \
    ### vision_msgs ### \
    && git clone -b $ROS_DISTRO https://github.com/ros-perception/vision_msgs \
    ### Xacro ### \
    && git clone -b dashing-devel https://github.com/ros/xacro/ \
    ### VLP-16 ### \
    && sudo apt-get install -y libpcap-dev libpcl-dev libyaml-cpp-dev \
    && git clone -b $ROS_DISTRO https://github.com/ros/diagnostics \
    && git clone -b ros2 https://github.com/ros/angles \
    && git clone -b ros2 https://github.com/ros-drivers/velodyne \
    ### ros-planning navigation2 ### \
    && git clone -b ${ROS_DISTRO}-devel https://github.com/ros-planning/navigation2 \
    ### turtlebot3 ### \
    && git clone -b ${ROS_DISTRO}-devel https://github.com/ROBOTIS-GIT/DynamixelSDK \
    && git clone -b ${ROS_DISTRO}-devel https://github.com/ROBOTIS-GIT/turtlebot3_msgs \
    && git clone -b ${ROS_DISTRO}-devel https://github.com/ROBOTIS-GIT/turtlebot3 \
    && git clone -b ${ROS_DISTRO}-devel https://github.com/ROBOTIS-GIT/hls_lfcd_lds_driver \
    ### pcl_conversions ### \
    && git clone -b ros2 https://github.com/ros-perception/pcl_msgs \
    && git clone -b ${ROS_DISTRO}-devel https://github.com/ros-perception/perception_pcl \
    ### ros_canopen ### \
    && cd /opt/ros/$ROS_DISTRO/src \
    && git clone -b dashing https://github.com/ros-industrial/ros_canopen \
    && sudo apt autoremove -y \
    && sudo rm -rf /var/lib/apt/lists/*


########################################
# ompl
########################################
# requirement: boost
#--- stderr: smac_planner
#
#CMake Error at CMakeLists.txt:25 (find_package):
#  By not providing "Findompl.cmake" in CMAKE_MODULE_PATH this project has
#  asked CMake to find a package configuration file provided by "ompl", but
#  CMake did not find one.
#
#  Could not find a package configuration file provided by "ompl" with any of
#  the following names:
#
#    omplConfig.cmake
#    ompl-config.cmake
#
#  Add the installation prefix of "ompl" to CMAKE_PREFIX_PATH or set
#  "ompl_DIR" to a directory containing one of the above files.  If "ompl"
#  provides a separate development package or SDK, be sure it has been
#  installed.
RUN cd ~/github \
    && git clone https://github.com/ompl/ompl \
    && cd ompl \
    && mkdir -p build/Release \
    && cd build/Release \
    && cmake ../.. \
    && make -j$(nproc) \
    && sudo make install


########################################
# PCL 1.9.1 インストール
########################################
# requirement: boost
# cartographer_ros foxy cannot use pcl 1.12.1
RUN sudo apt-get update \
    && sudo apt-get install -y \
      libflann-dev \
      freeglut3-dev \
    && sudo apt autoremove -y \
    && sudo rm -rf /var/lib/apt/lists/*

RUN cd ~/github \
    && git clone https://github.com/PointCloudLibrary/pcl \
    && cd pcl \
    && git checkout pcl-1.9.1 \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make -j$(nproc) \
    && sudo make install


########################################
# rosdep dependency install
########################################
RUN sudo apt-get update \
    ### source update ### \
    && sudo rosdep init \
    && rosdep update \
    && cd /opt/ros/$ROS_DISTRO/ \
    && rosdep install --from-paths src --ignore-src -r -y --rosdistro $ROS_DISTRO \
    && sudo apt autoremove -y \
    && sudo rm -rf /var/lib/apt/lists/*


####################
# ros build
####################
RUN . /virtualenv/$VENV/bin/activate \
    && cd /opt/ros/$ROS_DISTRO \
    ### build ### \
    && export pybind11_DIR=/virtualenv/$VENV/lib/python3.6/site-packages/pybind11/share/cmake/pybind11 \
    && export PYTHONPATH=/usr/lib/python3/dist-packages \
    && colcon build --symlink-install --cmake-force-configure --cmake-clean-cache


########################################
# Cartographer-ROS
########################################
USER $USERNAME
RUN sudo apt-get update \
    && sudo apt-get install -y \
      libgoogle-glog-dev \
      libgflags-dev \
      libatlas-base-dev \
      libeigen3-dev \
      libsuitesparse-dev \
      liblua5.2-dev \
      stow \
    && sudo apt autoremove -y \
    && sudo rm -rf /var/lib/apt/lists/*

# Foxyはcartographer_ros 1.0.900xを使うことからCeres 1.13.0を使う
RUN cd ~/github \
    && git clone -b 1.13.0 https://ceres-solver.googlesource.com/ceres-solver \
    && cd ceres-solver \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make -j$(nproc) \
    && sudo make install

# cartographer_ros 1.0.900xはcartographer/common/mutex.hを要求するため、cartographer 1.0.0を使う
RUN cd ~/github \
    && git clone -b 1.0.0 https://github.com/cartographer-project/cartographer \
    # https://github.com/cartographer-project/cartographer/issues/1611#issuecomment-560236725
    && sed -i 's/if(NOT GMock_FOUND)/if(NOT GMock_FOUND)\n  find_library(GTEST_LIBRARIES NAMES gtest PATH_SUFFIXES lib)\n  find_library(GMOCK_A_LIBRARIES NAMES gmock PATH_SUFFIXES lib)/g' cartographer/cmake/modules/FindGMock.cmake \
    && sed -i 's/list(APPEND GMOCK_LIBRARIES \${CMAKE_THREAD_LIBS_INIT})/list(APPEND GMOCK_LIBRARIES ${GMOCK_A_LIBRARIES} ${GTEST_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})/g' cartographer/cmake/modules/FindGMock.cmake \
    # https://github.com/cartographer-project/cartographer/issues/1611#issuecomment-801093258
    && sed -i 's/\${GMOCK_LIBRARY}/${GMOCK_LIBRARIES}/g' cartographer/CMakeLists.txt \
    && cd cartographer \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make -j$(nproc) \
    && sudo make install

# cartographer_rvizはCOLCON_IGNORE（空ファイル）が置いてあるためビルドから除外される
# 1.0.9004はFoxyには無いtf2_eigen/tf2_eigen.hppを要求するため、ROS2 Foxyはfoxy用のaptパッケージになっている1.0.9001を使う。
# /opt/ros/foxy/src/cartographer_ros/cartographer_ros/cartographer_ros/node.cc:44:10: fatal error: tf2_eigen/tf2_eigen.hpp: No such file or directory
RUN . /virtualenv/$VENV/bin/activate \
    && . ${ROS_ROOT}/install/setup.sh \
    && cd /opt/ros/$ROS_DISTRO/src \
    && git clone -b 1.0.9001 https://github.com/ros2/cartographer_ros \
    && cd /opt/ros/$ROS_DISTRO \
    && sed -i 's/set(CMAKE_CXX_STANDARD 14)/set(CMAKE_CXX_STANDARD 17)/g' src/cartographer_ros/cartographer_ros/CMakeLists.txt \
    && CPATH=/opt/ros/$ROS_DISTRO/install/rmw/include \
      colcon build --symlink-install --cmake-force-configure --cmake-clean-cache --packages-skip-build-finished --base-paths \
      src/cartographer_ros


########################################
# rviz_visual_tools, moveit2
########################################
# eigen_stl_containersを先にビルドする必要がある
# git config --get remote.origin.url; git branch -a

RUN . /virtualenv/$VENV/bin/activate \
    && . ${ROS_ROOT}/install/setup.sh \
    && cd /opt/ros/$ROS_DISTRO/src \
    && git clone -b ros2 https://github.com/ros/eigen_stl_containers \
    && git clone -b ros2 https://github.com/naisy/rviz_visual_tools \
    && cd /opt/ros/$ROS_DISTRO \
    && colcon build --symlink-install --cmake-force-configure --cmake-clean-cache --packages-skip-build-finished --base-paths \
      src/eigen_stl_containers \
      src/rviz_visual_tools

RUN . /virtualenv/$VENV/bin/activate \
    && . ${ROS_ROOT}/install/setup.sh \
    && cd /opt/ros/$ROS_DISTRO/src \
    && git clone -b ros2 https://github.com/ros-planning/random_numbers \
    && git clone -b foxy https://github.com/ros-planning/geometric_shapes \
    && cd /opt/ros/$ROS_DISTRO \
    && colcon build --symlink-install --cmake-force-configure --cmake-clean-cache --packages-skip-build-finished --continue-on-error --base-paths \
      src/random_numbers \
      src/geometric_shapes


####################
# setup.bash
####################
USER root
RUN echo "export ROS_ROOT=$ROS_ROOT" >> /root/.bashrc \
    && echo 'source ${ROS_ROOT}/install/setup.bash' >> /root/.bashrc \
    && echo "export PYTHONPATH=/virtualenv/$VENV/lib/python3.6/site-packages" >> /home/$USERNAME/.bashrc \
    && echo "export ROS_ROOT=$ROS_ROOT" >> /home/$USERNAME/.bashrc \
    && echo 'source ${ROS_ROOT}/install/setup.bash' >> /home/$USERNAME/.bashrc

RUN sed -i 's/docker-/docker-ros2-foxy-/g' /root/.bashrc \
    && sed -i 's/docker-/docker-ros2-foxy-/g' /home/$USERNAME/.bashrc
USER $USERNAME

