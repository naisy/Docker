########################################
# Docker build
########################################
# Host: apt-get install nvidia-driver-550
#time sudo docker build --progress plain -t naisy/pc-ubuntu2204-trt-base -f Dockerfile_pc_ubuntu2204_tensorrt_base .

# docker push
#docker login --username=naisy
#docker images
#docker push naisy/pc-ubuntu2204-trt-base


#sudo service docker stop
#cd /var/lib
#sudo mv docker /mnt/ssd250
#sudo ln -s /mnt/ssd250 docker
#sudo service docker start

# https://github.com/NVIDIA/nvidia-docker/issues/1033
# cmake fails unable to find cuda library while building an image
#vi /etc/docker/daemon.json
#{
#    "runtimes": {
#        "nvidia": {
#            "path": "/usr/bin/nvidia-container-runtime",
#            "runtimeArgs": []
#        }
#    },
#    "default-runtime": "nvidia"
#}
#
#service docker stop
#service docker start


# end of information


########################################
# Underlying OS repogitory
########################################
# https://hub.docker.com/r/nvidia/cuda
# nvcr.io/nvidia/tensorrt:24.08-py3: Ubuntu 22.04/CUDA 12.6/Python 3.10/TensorRT 10.3.0
# nvcr.io/nvidia/tensorrt:24.04-py3: Ubuntu 22.04/CUDA 12.4/Python 3.10/TensorRT 8.6.3
# lsb_release -a
# nvcc --version
# pip list installed
FROM nvcr.io/nvidia/tensorrt:24.08-py3

########################################
# ENV
########################################
ARG DEBIAN_FRONTEND=noninteractive


# apt-cache madison cuda-compat-11-2
# apt-cache policy cuda-compat-11-2

########################################
# apt fix
########################################
# Because sometime the repository is 404, use with --fix-missing option.
RUN rm -rf /var/lib/apt/lists/* \
    && apt-get --fix-missing update \
    && apt-get install -y \
      apt-utils \
      lsb-release \
    # change the locale from POSIX to UTF-8
    && apt-get install -y \
      locales \
      file \
    && locale-gen en_US en_US.UTF-8 \
    && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 \
    && apt autoremove -y \
    && rm -rf /var/lib/apt/lists/*

ENV LANG=en_US.UTF-8


########################################
# CUDA library path for build environment
########################################
#cat /etc/ld.so.conf.d/nvidia.conf
# # Multiarch support
# /usr/local/lib/x86_64-linux-gnu
# /lib/x86_64-linux-gnu
# /usr/lib/x86_64-linux-gnu
# /usr/local/cuda/targets/x86_64-linux/lib
# /usr/local/cuda/targets/x86_64-linux/lib/stubs
RUN echo "# Multiarch support" > /etc/ld.so.conf.d/x86_64-linux-gnu.conf \
    && echo /usr/local/lib/x86_64-linux-gnu >> /etc/ld.so.conf.d/x86_64-linux-gnu.conf \
    && echo /lib/x86_64-linux-gnu >> /etc/ld.so.conf.d/x86_64-linux-gnu.conf \
    && echo /usr/lib/x86_64-linux-gnu >> /etc/ld.so.conf.d/x86_64-linux-gnu.conf \
    && echo /usr/local/cuda/targets/x86_64-linux/lib >> /etc/ld.so.conf.d/x86_64-linux-gnu.conf \
    && echo /usr/local/cuda/targets/x86_64-linux/lib/stubs >> /etc/ld.so.conf.d/x86_64-linux-gnu.conf \
    && ldconfig


########################################
# XAuthority
########################################
RUN apt-get update \
    && apt-get install -y \
      sudo \
      xauth \
      dbus-x11 \
      xterm \
    && apt autoremove -y \
    && rm -rf /var/lib/apt/lists/*
#Add new sudo user
ARG USERNAME=ubuntu
RUN useradd -m $USERNAME \
    && echo "$USERNAME:$USERNAME" | chpasswd \
    && usermod --shell /bin/bash $USERNAME \
    && usermod -aG sudo,adm,dialout,cdrom,audio,dip,video,plugdev $USERNAME \
    && echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME \
    # Replace 1000 with your user/group id
    && usermod  --uid 1000 $USERNAME \
    && groupmod --gid 1000 $USERNAME


########################################
# bash setting
########################################
# sed
# escape characters \'$.*/[]^
# 1. Write the regex between single quotes.
# 2. \ -> \\
# 3. ' -> '\''
# 4. Put a backslash before $.*/[]^ and only those characters.


####################
# USER
####################
# before
# #force_color_prompt=yes
# after
# force_color_prompt=yes

# before
#    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
# after
#    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\[\033[01;31m\]docker-\h\[\033[00m\]:\[\033[01;35m\]\w\[\033[00m\]\$ '


# before
# alias ls='ls --color=auto'
# after
# alias ls='ls -asiF --color=auto'

RUN sed -i 's/#force_color_prompt=yes/force_color_prompt=yes/g' /home/$USERNAME/.bashrc \
    && sed -i 's/PS1='\''\${debian_chroot:+(\$debian_chroot)}\\\[\\033\[01;32m\\\]\\u@\\h\\\[\\033\[00m\\\]:\\\[\\033\[01;34m\\\]\\w\\\[\\033\[00m\\\]\\\$ '\''/PS1='\''\${debian_chroot:+(\$debian_chroot)}\\\[\\033\[01;32m\\\]\\u@\\\[\\033\[01;31m\\\]docker-\\h\\\[\\033\[00m\\\]:\\\[\\033\[01;35m\\\]\\w\\\[\\033\[00m\\\]\\\$ '\''/g' /home/$USERNAME/.bashrc \
    && sed -i 's/alias ls='\''ls --color=auto'\''/alias ls='\''ls -asiF --color=auto'\''/g' /home/$USERNAME/.bashrc \
    && echo 'alias xterm='"'"'xterm -fa '"'"'Monospace'"'"' -fs 10 -fg white -bg black'"'"'\n' >> /home/$USERNAME/.bashrc \
    && echo 'export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:/usr/local/cuda/targets/x86_64-linux/lib:/usr/local/cuda/targets/x86_64-linux/lib/stubs:/usr/local/lib:$LD_LIBRARY_PATH' >> /home/$USERNAME/.bashrc \
    && echo 'export LANG=en_US.UTF-8' >> /home/$USERNAME/.bashrc \
    && echo 'export NO_AT_BRIDGE=1' >> /home/$USERNAME/.bashrc \
    && echo 'cd' >> /home/$USERNAME/.bashrc \
    && echo "complete -d cd" >> /home/$USERNAME/.bashrc


####################
# ROOT
####################
# before
#    xterm-color) color_prompt=yes;;
# after
#    xterm-color|*-256color) color_prompt=yes;;

# before
#    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '

# after
#    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;37m\]\u@\[\033[01;31m\]docker-\h\[\033[00m\]:\[\033[01;35m\]\w\[\033[00m\]\$ '

# before
# alias ls='ls --color=auto'
# after
# alias ls='ls -asiF --color=auto'

RUN sed -i 's/xterm-color) color_prompt=yes;;/xterm-color|\*-256color) color_prompt=yes;;/g' /root/.bashrc \
    && sed -i 's/#force_color_prompt=yes/force_color_prompt=yes/g' /root/.bashrc \
    && sed -i 's/PS1='\''\${debian_chroot:+(\$debian_chroot)}\\\[\\033\[01;32m\\\]\\u@\\h\\\[\\033\[00m\\\]:\\\[\\033\[01;34m\\\]\\w\\\[\\033\[00m\\\]\\\$ '\''/PS1='\''\${debian_chroot:+(\$debian_chroot)}\\\[\\033\[01;37m\\\]\\u@\\\[\\033\[01;31m\\\]docker-\\h\\\[\\033\[00m\\\]:\\\[\\033\[01;35m\\\]\\w\\\[\\033\[00m\\\]\\\$ '\''/g' /root/.bashrc \
    && sed -i 's/alias ls='\''ls --color=auto'\''/alias ls='\''ls -asiF --color=auto'\''/g' /root/.bashrc \
    && echo 'alias xterm='"'"'xterm -fa '"'"'Monospace'"'"' -fs 10 -fg white -bg black'"'"'\n' >> /root/.bashrc \
    && echo 'export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:/usr/local/cuda/targets/x86_64-linux/lib:/usr/local/cuda/targets/x86_64-linux/lib/stubs:/usr/local/lib:$LD_LIBRARY_PATH' >> /root/.bashrc \
    && echo 'export LANG=en_US.UTF-8' >> /root/.bashrc \
    && echo 'export NO_AT_BRIDGE=1' >> /root/.bashrc \
    && echo "complete -d cd" >> /root/.bashrc


#########################################
# .dircolors
########################################
# end of line: \n\
# ': '"'"'

RUN printf '# dircolors -p > ~/.dircolors\n\
# vi ~/.dircolors\n\
# man dircolors\n\
\n\
# Configuration file for dircolors, a utility to help you set the\n\
# LS_COLORS environment variable used by GNU ls with the --color option.\n\
# Copyright (C) 1996-2016 Free Software Foundation, Inc.\n\
# Copying and distribution of this file, with or without modification,\n\
# are permitted provided the copyright notice and this notice are preserved.\n\
# The keywords COLOR, OPTIONS, and EIGHTBIT (honored by the\n\
# slackware version of dircolors) are recognized but ignored.\n\
# Below are TERM entries, which can be a glob patterns, to match\n\
# against the TERM environment variable to determine if it is colorizable.\n\
TERM Eterm\n\
TERM ansi\n\
TERM color-xterm\n\
TERM con[0-9]*x[0-9]*\n\
TERM cons25\n\
TERM console\n\
TERM cygwin\n\
TERM dtterm\n\
TERM eterm-color\n\
TERM gnome\n\
TERM gnome-256color\n\
TERM hurd\n\
TERM jfbterm\n\
TERM konsole\n\
TERM kterm\n\
TERM linux\n\
TERM linux-c\n\
TERM mach-color\n\
TERM mach-gnu-color\n\
TERM mlterm\n\
TERM putty\n\
TERM putty-256color\n\
TERM rxvt*\n\
TERM screen*\n\
TERM st\n\
TERM st-256color\n\
TERM terminator\n\
TERM tmux*\n\
TERM vt100\n\
TERM xterm*\n\
# Below are the color init strings for the basic file types. A color init\n\
# string consists of one or more of the following numeric codes:\n\
# Attribute codes:\n\
# 00=none 01=bold 04=underscore 05=blink 07=reverse 08=concealed\n\
# Text color codes:\n\
# 30=black 31=red 32=green 33=yellow 34=blue 35=magenta 36=cyan 37=white\n\
# Background color codes:\n\
# 40=black 41=red 42=green 43=yellow 44=blue 45=magenta 46=cyan 47=white\n\
#NORMAL 00 # no color code at all\n\
#FILE 00 # regular file: use no color at all\n\
RESET 0 # reset to "normal" color\n\
DIR 01;35 # directory\n\
LINK 01;36 # symbolic link. (If you set this to '"'"'target'"'"' instead of a\n\
 # numerical value, the color is as for the file pointed to.)\n\
MULTIHARDLINK 00 # regular file with more than one link\n\
FIFO 40;99 # pipe\n\
SOCK 01;32 # socket\n\
DOOR 01;32 # door\n\
BLK 40;99;01 # block device driver\n\
CHR 40;99;01 # character device driver\n\
ORPHAN 40;31;01 # symlink to nonexistent file, or non-stat'"'"'able file ...\n\
MISSING 00 # ... and the files they point to\n\
SETUID 37;41 # file that is setuid (u+s)\n\
SETGID 30;43 # file that is setgid (g+s)\n\
CAPABILITY 30;41 # file with capability\n\
STICKY_OTHER_WRITABLE 30;42 # dir that is sticky and other-writable (+t,o+w)\n\
OTHER_WRITABLE 35;42 # dir that is other-writable (o+w) and not sticky\n\
STICKY 37;44 # dir with the sticky bit set (+t) and not other-writable\n\
# This is for files with execute permission:\n\
EXEC 01;31\n\
# List any file extensions like '"'"'.gz'"'"' or '"'"'.tar'"'"' that you would like ls\n\
# to colorize below. Put the extension, a space, and the color init string.\n\
# (and any comments you want to add after a '"'"'#'"'"')\n\
# If you use DOS-style suffixes, you may want to uncomment the following:\n\
#.cmd 01;31 # executables (bright green)\n\
#.exe 01;31\n\
#.com 01;31\n\
#.btm 01;31\n\
#.bat 01;31\n\
# Or if you want to colorize scripts even if they do not have the\n\
# executable bit actually set.\n\
#.sh 01;31\n\
#.csh 01;31\n\
 # archives or compressed (bright red)\n\
.tar 01;33\n\
.tgz 01;33\n\
.arc 01;33\n\
.arj 01;33\n\
.taz 01;33\n\
.lha 01;33\n\
.lz4 01;33\n\
.lzh 01;33\n\
.lzma 01;33\n\
.tlz 01;33\n\
.txz 01;33\n\
.tzo 01;33\n\
.t7z 01;33\n\
.zip 01;33\n\
.z 01;33\n\
.Z 01;33\n\
.dz 01;33\n\
.gz 01;33\n\
.lrz 01;33\n\
.lz 01;33\n\
.lzo 01;33\n\
.xz 01;33\n\
.bz2 01;33\n\
.bz 01;33\n\
.tbz 01;33\n\
.tbz2 01;33\n\
.tz 01;33\n\
.deb 01;33\n\
.rpm 01;33\n\
.jar 01;33\n\
.war 01;33\n\
.ear 01;33\n\
.sar 01;33\n\
.rar 01;33\n\
.alz 01;33\n\
.ace 01;33\n\
.zoo 01;33\n\
.cpio 01;33\n\
.7z 01;33\n\
.rz 01;33\n\
.cab 01;33\n\
# image formats\n\
.jpg 01;32\n\
.jpeg 01;32\n\
.gif 01;32\n\
.bmp 01;32\n\
.pbm 01;32\n\
.pgm 01;32\n\
.ppm 01;32\n\
.tga 01;32\n\
.xbm 01;32\n\
.xpm 01;32\n\
.tif 01;32\n\
.tiff 01;32\n\
.png 01;32\n\
.svg 01;32\n\
.svgz 01;32\n\
.mng 01;32\n\
.pcx 01;32\n\
.mov 01;32\n\
.mpg 01;32\n\
.mpeg 01;32\n\
.m2v 01;32\n\
.mkv 01;32\n\
.webm 01;32\n\
.ogm 01;32\n\
.mp4 01;32\n\
.m4v 01;32\n\
.mp4v 01;32\n\
.vob 01;32\n\
.qt 01;32\n\
.nuv 01;32\n\
.wmv 01;32\n\
.asf 01;32\n\
.rm 01;32\n\
.rmvb 01;32\n\
.flc 01;32\n\
.avi 01;32\n\
.fli 01;32\n\
.flv 01;32\n\
.gl 01;32\n\
.dl 01;32\n\
.xcf 01;32\n\
.xwd 01;32\n\
.yuv 01;32\n\
.cgm 01;32\n\
.emf 01;32\n\
# http://wiki.xiph.org/index.php/MIME_Types_and_File_Extensions\n\
.axv 01;32\n\
.anx 01;32\n\
.ogv 01;32\n\
.ogx 01;32\n\
# audio formats\n\
.aac 00;36\n\
.au 00;36\n\
.flac 00;36\n\
.m4a 00;36\n\
.mid 00;36\n\
.midi 00;36\n\
.mka 00;36\n\
.mp3 00;36\n\
.mpc 00;36\n\
.ogg 00;36\n\
.ra 00;36\n\
.wav 00;36\n\
# http://wiki.xiph.org/index.php/MIME_Types_and_File_Extensions\n\
.axa 00;36\n\
.oga 00;36\n\
.opus 00;36\n\
.spx 00;36\n\
.xspf 00;36\n'\
> /root/.dircolors && cp /root/.dircolors /home/$USERNAME/.dircolors && chown $USERNAME:$USERNAME /home/$USERNAME/.dircolors


########################################
# Default Command
########################################
#CMD bash -c "/usr/bin/xterm -fa 'Monospace' -fs 10"
CMD bash -c "/bin/bash"


### END GUI ###


########################################
# Packages
########################################
RUN apt-get update \
    && apt-get install -y \
      libgstreamer1.0-0 \
      libgstreamer1.0-dev \
      libgstreamer-plugins-base1.0-dev \
      libgstrtspserver-1.0-dev \
    && apt autoremove -y \
    && rm -rf /var/lib/apt/lists/*

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
      arp-scan \
      ca-certificates \
      colortest \
      curl \
      dialog \
      fonts-noto-cjk \
      g++ \
      gcc \
      gfortran \
      gir1.2-glib-2.0 \
      gir1.2-gstreamer-1.0 \
      gir1.2-gtk-3.0 \
      git \
      git-lfs \
      gnupg2 \
      hdf5-tools \
      htop \
      iproute2 \
      iptables \
      iputils-ping \
      less \
      libaio-dev \
      libavcodec-dev \
      libavcodec-extra \
      libavcodec-extra58 \
      libavformat-dev \
      libblas-dev \
      libblkid-dev \
      libbz2-dev \
      libcairo2-dev \
      libcap2-bin \
      libc++-dev \
      libcgal-dev \
      libcurl4-openssl-dev \
      libdw1 \
      libdw-dev \
      libelf-dev \
      libffi-dev \
      libfreetype6-dev \
      libgeos-dev \
      libgirepository-1.0-1 \
      libgirepository1.0-dev \
      libglib2.0-0 \
      libglib2.0-bin \
      libglib2.0-data \
      libglib2.0-dev \
      libglib2.0-dev-bin \
      libhdf5-dev \
      libhdf5-serial-dev \
      libjpeg8-dev \
      libjpeg-dev \
      liblapack-dev \
      liblzma-dev \
      libmount-dev \
      libmpdec3 \
      libmtdev-dev \
      libncurses5-dev \
      libncursesw5-dev \
      libopenblas-dev \
      libopenmpi-dev \
      libpam-cap \
      libpcre16-3 \
      libpcre2-16-0 \
      libpcre2-32-0 \
      libpcre2-dev \
      libpcre2-posix3 \
      libpcre32-3 \
      libpcre3-dev \
      libpcrecpp0v5 \
      libpng-dev \
      libportmidi-dev \
      libprotobuf-dev \
      libpython3.10-minimal \
      libpython3.10-stdlib \
      libpython3-dev \
      libpython3-stdlib \
      libreadline-dev \
      libsdl2-dev \
      libsdl2-gfx-dev \
      libsdl2-image-dev \
      libsdl2-mixer-dev \
      libsdl2-net-dev \
      libsdl2-ttf-dev \
      libselinux1-dev \
      libsepol-dev \
      libsqlite3-dev \
      libssl-dev \
      libswscale-dev \
      libx11-dev \
      libxml2-dev \
      libxslt1-dev \
      locate \
      lsb-release \
      make \
      mediainfo \
      media-types \
      net-tools \
      ninja-build \
      openmpi-bin \
      openmpi-doc \
      openssl \
      pandoc \
      pkg-config \
      protobuf-compiler \
      python3 \
      python3.10 \
      python3.10-minimal \
      python3-dev \
      python3-distutils \
      python3-gi \
      python3-gi-cairo \
      python3-gst-1.0 \
      python3-lib2to3 \
      python3-minimal \
      python3-pip \
      python3-tk \
      rsync \
      scons \
      shared-mime-info \
      ssh \
      texlive \
      texlive-fonts-extra \
      texlive-fonts-recommended \
      texlive-xetex \
      tree \
      unzip \
      uuid-dev \
      v4l-utils \
      vim \
      wget \
      xclip \
      xdg-user-dirs \
      xterm \
      zip \
      zlib1g-dev \
    && apt autoremove -y \
    && rm -rf /var/lib/apt/lists/*


########################################
# set default gcc version to 11
########################################
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 11 \
    && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 11 \
    && update-alternatives --set gcc /usr/bin/gcc-11 \
    && update-alternatives --set g++ /usr/bin/g++-11


########################################
# ~/.vimrc
########################################
USER $USERNAME
RUN echo 'syntax enable\n\
set background=dark'\
>  ~/.vimrc
USER root
RUN echo 'syntax enable\n\
set background=dark'\
>  ~/.vimrc



### END GUI ###


########################################
# CMake 3.31.4
########################################
USER $USERNAME
RUN mkdir -p ~/github \
    && cd ~/github \
    && sudo apt-get update \
    && sudo apt-get remove -y \
      cmake \
    && git clone https://github.com/Kitware/CMake.git --depth 1 -b v3.31.4 \
    && cd CMake \
    && ./bootstrap --system-curl \
    && make -j$(nproc) \
    && sudo make install \
    && rm -rf ~/github \
    && sudo apt autoremove -y \
    && sudo rm -rf /var/lib/apt/lists/*


########################################
# pip
########################################
ARG VENV=python3
RUN sudo mkdir /virtualenv \
    && sudo chown $USERNAME:$USERNAME /virtualenv


# python3 -m virtualenv -p python3 /virtualenv/$VENV --system-site-packages
# これはsystem-site-packagesを引き継ぐ設定。しかし、これは~/.local/lib/python3.6/site-packages/以下にコピーされる
# ~/.local/というのが問題になる。ユーザ個別設定となる。ここにあるライブラリをROS2で使いたい場合に、環境変数PYTHONPATHで指定する必要がある。
# 特定ユーザのホームディレクトリにあるPATHを指定するということは避けたい。そのため--system-site-packagesは指定しない。
# すべてのpipライブラリは作成した/virtualenv/python3/lib/python3.6/site-packages/以下に完結するように管理する
# --system-site-packagesは引き継がないことにする。理由はsetuptoolsのバージョンが低いため。system側のsetuptoolsを更新する必要が生じてしまう。
# https://github.com/pypa/setuptools/issues/1694#issuecomment-466010982
#    && python3 -m virtualenv -p python3 /virtualenv/$VENV --system-site-packages \
RUN pip3 install virtualenv \
   && export VENV_PROMPT=`python3 -V 2>&1 | awk '{print $1$2}' | tr P p` \
   && python3 -m virtualenv -p python3 /virtualenv/$VENV --prompt $VENV_PROMPT \
   && echo "source /virtualenv/$VENV/bin/activate" >> ~/.bashrc


# numpy/core/src/multiarray/numpyos.c:18:10: fatal error: xlocale.h: No such file or directory
# #include <xlocale.h>
RUN sudo ln -s /usr/include/locale.h /usr/include/xlocale.h



##############################
# https://stackoverflow.com/questions/4011705/python-the-imagingft-c-module-is-not-installed
# https://hideharaaws.hatenablog.com/entry/2016/04/25/173153
# ImportError: The _imagingft C module is not installed
# freetypeを利用できないpillowがある。8.4.0を指定すると回避できる。
##############################
RUN . /virtualenv/$VENV/bin/activate \
    && pip install --no-cache-dir \
      beautifulsoup4==4.12.3 \
      Cython==3.0.9 \
      certifi==2024.2.2 \
      cffi==1.16.0 \
      charset-normalizer==3.3.2 \
      cryptography==42.0.5 \
      distro==1.9.0 \
      filelock==3.13.1 \
      gdown==5.1.0 \
      httplib2==0.22.0 \
      idna==3.6 \
      importlib-metadata==6.11.0 \
      importlib-resources==6.1.2 \
      jeepney==0.8.0 \
      keyring==24.3.1 \
      launchpadlib==1.11.0 \
      numpy==1.24.4 \
      oauthlib==3.2.2 \
      pbr==6.0.0 \
      pip==24.3.1 \
      pycparser==2.21 \
      pyparsing==3.1.2 \
      PySocks==1.7.1 \
      SecretStorage==3.3.3 \
      setuptools==69.1.1 \
      six==1.16.0 \
      soupsieve==2.5 \
      testresources==2.0.1 \
      tqdm==4.66.2 \
      typing_extensions==4.12.2 \
      wadllib==1.3.6 \
      wheel==0.42.0 \
      zipp==3.17.0


RUN . /virtualenv/$VENV/bin/activate \
    && pip install --no-cache-dir \
        cmake \
      # JupyterLab \
        jupyterlab \
        jupyter_client \
        ipykernel \
        ipywidgets \
        ipyevents \
        nbdev \
        Jinja2 \
        zmq \
        argon2_cffi \
        jupyter_kernel_gateway \
      # Generative AI \
        boto3 \
        langchain \
        langchain-community \
        langchain-openai \
        langchain-aws \
        azure-identity \
        azure-search-documents \
        openai \
        llama-index \
        pdfminer.six \
      # FastAPI/Flask \
        uvicorn \
        Flask \
      # AI
        fastapi \
        imageio \
        opencv_python \
        pkgconfig \
        scikit-image \
        scikit-learn \
        scipy \
        pandas \
        matplotlib  \
        Pillow \
        regex \
        transformers \
      # Prolog
        pyswip \
      # PlantUML \
        iplantuml \
        graphviz \
      # Other
        PyYAML \
        cycler \
        kiwisolver \
        networkx \
        httpcore \
        httpx \
        tifffile \
        fastcore \
        fastrelease \
        ghapi \
        PyWavelets \
        lazy_loader \
        prompt_toolkit \
        tiktoken \
        wandb \
        einops \
        bitsandbytes \
        accelerate \
        sentencepiece \
        peft==0.14.0 \
        trl \
        emoji \
        neologdn \
	unsloth \
      # LLM
        jax==0.4.29 \
        jaxlib==0.4.29+cuda12.cudnn91 \
        git+https://github.com/google-deepmind/optax.git \
        datasets \
        mecab-python3 \
        unidic-lite \
        pynvml \
        deepspeed \
        seaborn \
	sentence_transformers \
	nGPT-pytorch \
      # Torch
        pytools==2025.1.1 \
        pycairo==1.27.0 \
        pycuda==2025.1 \
        tensorrt==10.3.0 \
        torch \
        torchvision \
        torchaudio \
        xformers \
        vllm==0.7.2 \
      # OCR
        easyocr \
      # LLM
      -f https://download.pytorch.org/whl/cu124 \
      -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html 

# pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu124

RUN . /virtualenv/$VENV/bin/activate \
    && pip install --no-cache-dir \
        flash_attn


#pip install torch==2.3.1+cu121 \
# torchvision \
# torchaudio==2.3.1+cu121 \
# xformers \
# -f https://download.pytorch.org/whl/torch_stable.html


########################################
# nodejs
########################################
# https://github.com/nodesource/distributions/blob/master/README.md
# https://deb.nodesource.com/setup_14.x - Node.js 14 LTS "Fermium" (recommended)
# https://deb.nodesource.com/setup_16.x - Node.js 16 "Gallium"
# https://deb.nodesource.com/setup_18.x - Node.js 18 "Eighteen" (current)

RUN curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash - \
    && sudo apt-get update \
    && sudo apt-get install -y \
         nodejs \
    && sudo apt autoremove -y \
    && sudo rm -rf /var/lib/apt/lists/*


########################################
# JupyterLab4 設定
########################################
RUN . /virtualenv/$VENV/bin/activate \
    ####################
    # Jupyter Lab Vertual Env
    # To set the virtualenv as "python3", jupyter notebooks works in virtualenv.
    ####################
    && python -m ipykernel install --name python3 --user \
    ####################
    # Jupyter Lab password 設定
    ####################
    && mkdir -p $HOME/.jupyter \
    && export PASSWORD_HASH=`python -c 'from argon2 import PasswordHasher;print(PasswordHasher(memory_cost=10240,time_cost=10,parallelism=8).hash("jupyter"))'` \
    && printf '{\n\
  "IdentityProvider": {\n\
    "hashed_password": "argon2:'$PASSWORD_HASH'"\n\
  }\n\
}' > $HOME/.jupyter/jupyter_server_config.json \
    ####################
    # Disable Jupyter autosave
    ####################
    && mkdir -p ~/.jupyter/lab/user-settings/\@jupyterlab/docmanager-extension \
    && printf '{\n\
    // Document Manager\n\
    // @jupyterlab/docmanager-extension:plugin\n\
    // Document Manager settings.\n\
    // ***************************************\n\
\n\
    // Autosave Documents\n\
    // Whether to autosave documents\n\
    "autosave": false\n\
}'\
>  ~/.jupyter/lab/user-settings/\@jupyterlab/docmanager-extension/plugin.jupyterlab-settings \
    ####################
    # Jupyter Dark Terminal Theme
    ####################
    && mkdir -p ~/.jupyter/lab/user-settings/\@jupyterlab/terminal-extension \
    && printf '{\n\
    // Terminal\n\
    // @jupyterlab/terminal-extension:plugin\n\
    // Terminal settings.\n\
    // *************************************\n\
\n\
    // Theme\n\
    // The theme for the terminal.\n\
    "theme": "dark"\n\
}'\
>  ~/.jupyter/lab/user-settings/\@jupyterlab/terminal-extension/plugin.jupyterlab-settings \
    ####################
    # Jupyter Console System Color Tango to Rxvt-LightBlue/Aquamarine
    ####################
    # ファイル名がわからん。インストールで変わる。
    # find /usr/local/share/jupyter/lab/static/ -type f | xargs grep -l "#2e3436"
    # /usr/local/share/jupyter/lab/static/vendors~main.23ff2294e1453ac6af20.js
    # locate /virtualenv/python3 | grep "\.js$"  | xargs -I {} grep -l "#ad7fa8" {}
    #export JUPYTER_TERMINAL_COLOR_FILE=`find /usr/local/share/jupyter/lab/static/ -type f -name "*\.js" | xargs -I {} grep -l "#3465a4" {}` \
    #&& export JUPYTER_TERMINAL_COLOR_FILE=`find /virtualenv/$VENV/share/jupyter/lab/static/ -type f -name "*\.js" | xargs -I {} grep -l "#3465a4" {}` \
    && sh -c '\
       JUPYTER_TERMINAL_COLOR_FILE=$(find /virtualenv/$VENV/ -type f -name "*\.js" | xargs -I {} grep -l "#3465a4" {}); \
       for file in $JUPYTER_TERMINAL_COLOR_FILE; do \
          sed -i 's/#2e3436/#000000/g' $file; \
          sed -i 's/#cc0000/#cd0000/g' $file; \
          sed -i 's/#4e9a06/#00cd00/g' $file; \
          sed -i 's/#c4a000/#cdcd00/g' $file; \
          sed -i 's/#3465a4/#add8e6/g' $file; \
          sed -i 's/#75507b/#cd00cd/g' $file; \
          sed -i 's/#06989a/#00cdcd/g' $file; \
          sed -i 's/#d3d7cf/#faebd7/g' $file; \
          sed -i 's/#555753/#404040/g' $file; \
          sed -i 's/#ef2929/#ff0000/g' $file; \
          sed -i 's/#8ae234/#00ff00/g' $file; \
          sed -i 's/#fce94f/#ffff00/g' $file; \
          sed -i 's/#729fcf/#7fffd4/g' $file; \
          sed -i 's/#ad7fa8/#ff00ff/g' $file; \
          sed -i 's/#34e2e2/#00ffff/g' $file; \
          sed -i 's/#eeeeec/#ffffff/g' $file; \
       done \
'

########################################
# Launch JupyterLab from virtualenv with root dir and default dir
########################################
# https://stackoverflow.com/questions/69038787/how-to-set-default-folder-in-jupyterlab-file-browser
#CMD . /virtualenv/python3/bin/activate && exec bash -c "jupyter-lab --ip=0.0.0.0 --no-browser --ServerApp.root_dir=/ --LabApp.default_url=/lab?file-browser-path=$HOME/data/Notebooks"
CMD . /virtualenv/python3/bin/activate && exec bash -c "jupyter-lab --ip=0.0.0.0 --no-browser --ServerApp.root_dir=/ --LabApp.default_url=/lab?file-browser-path=$HOME"


# https://github.com/keras-team/keras-tuner/issues/317
RUN echo "export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libgomp.so.1" >> ~/.bashrc



########################################
# torch2trt
########################################
RUN . /virtualenv/$VENV/bin/activate \
    && mkdir -p ~/github \
    && cd ~/github \
    && git clone https://github.com/NVIDIA-AI-IOT/torch2trt \
    && cd torch2trt \
    && pip install -e .

########################################
# llama.cpp
########################################
RUN . /virtualenv/$VENV/bin/activate \
    && mkdir -p ~/github \
    && cd ~/github \
    && git clone https://github.com/ggerganov/llama.cpp


########################################
# models
########################################
RUN . /virtualenv/$VENV/bin/activate \
    && python -c "import torchvision; \
         model = torchvision.models.resnet18(weights=torchvision.models.ResNet18_Weights.DEFAULT);"

